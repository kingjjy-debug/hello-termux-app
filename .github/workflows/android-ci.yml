name: Android CI (assembleDebug)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Install Android cmdline-tools (idempotent)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          if [ ! -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            tmpdir="$(mktemp -d)"; cd "$tmpdir"
            curl -fsSL -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
            mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
            unzip -q cmdline-tools.zip
            # 평탄화
            if [ -d cmdline-tools ]; then
              mv cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
            fi
          else
            echo "sdkmanager already present → skip download"
          fi
          # PATH 노출(러너 전용)
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"

      - name: Accept licenses & update
        shell: bash
        run: |
          set -euo pipefail
          yes | sdkmanager --licenses || true
          sdkmanager --update || true

      - name: Install required SDK packages (pin versions)
        shell: bash
        run: |
          set -euo pipefail
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.1"
          sdkmanager --list | grep -E "build-tools;|platforms;android-" | tail -n 30 || true

      - name: Write local.properties
        shell: bash
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8" >> gradle.properties

      - name: Show env
        shell: bash
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          which sdkmanager || true
          sdkmanager --version || true

      - name: Set up Gradle (8.4)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.4

      - name: Gradle Build (assembleDebug)
        shell: bash
        run: |
          set -euo pipefail
          gradle --no-daemon --warning-mode all :app:assembleDebug --stacktrace --info

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
