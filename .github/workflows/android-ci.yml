name: Android CI (assembleDebug)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Install Android cmdline-tools + accept licenses
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          tmpdir="$(mktemp -d)"; cd "$tmpdir"
          curl -L -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip
          # unzip하면 cmdline-tools/ 디렉토리가 한 겹 더 생김 → 평평하게 이동
          mv cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
          # PATH 노출
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"
          # 라이선스 수락 + 업데이트 (실패해도 계속)
          yes | sdkmanager --licenses || true
          sdkmanager --update || true

      - name: Install required SDK packages
        shell: bash
        run: |
          set -euxo pipefail
          # sdkmanager 사용 전 PATH가 GITHUB_PATH로 주입되었으므로 바로 호출 가능
          sdkmanager "platform-tools" "platforms;android-35" || sdkmanager "platforms;android-34"
          # build-tools는 가장 최신 안정판을 자동 선택
          LIST="$(sdkmanager --list || true)"
          FOUND="$(echo "$LIST" | grep -Eo 'build-tools;[0-9]+\.[0-9]+\.[0-9]+' | awk -F';' '{print $2}' | sort -V | tail -n1 || true)"
          if [ -z "$FOUND" ]; then
            echo "::error::No build-tools found from sdkmanager --list"
            exit 1
          fi
          echo ">> Installing build-tools;$FOUND"
          sdkmanager "build-tools;$FOUND"

      - name: Write local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          # 여유 메모리 설정(gradle.properties가 이미 있으면 append만)
          echo "org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8" >> gradle.properties || true
          cat local.properties

      - name: Show env
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          which sdkmanager || true
          sdkmanager --version || true

      - name: Set up Gradle (8.4)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.4

      - name: Gradle Build (assembleDebug)
        run: |
          gradle --no-daemon --warning-mode all :app:assembleDebug --stacktrace --info

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
